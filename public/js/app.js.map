{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/googleMap.js","js/directives/googlePlaces.js","js/service/location.js","js/controllers/main.js","js/models/places.js","js/models/product.js","js/controllers/products.js","js/router.js","js/models/tag.js","js/controllers/tags.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","register","this","user","is_store","submit","signup","then","go","LoginController","login","credentials","successResponse","currentUser","data","console","log","id","googleMap","$window","restrict","replace","template","scope","markers","marker","center","link","$scope","element","map","google","maps","Map","lat","latitude","lng","longitude","zoom","centerMarker","Marker","position","icon","animation","Animation","BOUNCE","push","$watchGroup","pos","setPosition","$watch","storeMarker","DROP","setCenter","forEach","setMap","store","googlePlace","require","place","attrs","model","autocomplete","places","Autocomplete","types","componentRestrictions","country","addListener","getPlace","latLng","geometry","location","toJSON","google_place_id","place_id","address","formatted_address","phone_number","formatted_phone_number","name","rating","website","$setViewValue","val","locationService","navigator","geolocation","getCurrentPosition","coords","MainController","$rootScope","User","main","isLoggedIn","isAuthenticated","message","protectedStates","$on","e","toState","get","getPayload","includes","preventDefault","logout","selectedList","addToSelectedProducts","product","Place","$resource","update","method","Product","ProductsIndexController","all","query","user_id","onOffer","is_available","$update","ProductsOfferedController","productsOffered","offOffer","$index","splice","ProductsNewController","productsNew","create","save","ProductsShowController","productsShow","params","delete","$remove","ProductsEditController","productsEdit","$promise","end_time","Date","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Tag","TagsIndexController","TagsNewController","tagsNew","tag","TagsShowController","tagsShow","TagsEditController","tagsEdit","UsersIndexController","usersIndex","$apply","UsersNewController","usersNew","UsersShowController","$http","usersShow","UsersEditController","usersEdit","UserOffersController","angular","module","constant","config","$inject","directive","service","factory"],"mappings":"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","file":"app.js","sourcesContent":["// angular.module('PopShopRzProject', ['ngResource', 'ui.router', 'satellizer' ])\n//   .constant('API_URL', window.location.hostname === 'localhost' ? 'http://localhost:3000/api' : '//sobuylocal-api.herokuapp.com/api')\n//   .config(Auth);\n//\n// Auth.$inject = ['$authProvider', 'API_URL'];\n// function Auth($authProvider, API_URL) {\n//   $authProvider.loginUrl = `${API_URL}/login`;\n//   $authProvider.signupUrl = `${API_URL}/register`;\n//\n//   $authProvider.tokenPrefix = '';\n// }\n\nangular.module('PopShopRzProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('PopShopRzProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {\n    is_store: false\n  };\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then((successResponse) => {\n        $auth.currentUser = successResponse.data.user;\n        console.log('LoginController: successResponse:', successResponse);\n        if ($auth.currentUser.is_store){\n          $state.go('usersShow', { id: $auth.currentUser.id });\n        } else {\n          $state.go('usersIndex');\n        }\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('PopShopRzProject')\n .directive('googleMap', googleMap);\n\n\n\ngoogleMap.$inject = ['$window'];\nfunction googleMap($window) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\"></div>',\n    scope: {\n      markers: '=',\n      marker: '=',\n      center: '='\n    },\n    link: function($scope, element) {\n      // let directionsDisplay = null;\n      // const directionsService = new $window.google.maps.DirectionsService();\n      //\n      // directionsDisplay = new $window.google.maps.DirectionsRenderer();\n      const map = new $window.google.maps.Map(element[0], {\n        center: { lat: $scope.center.latitude, lng: $scope.center.longitude },\n        zoom: 14\n      });\n\n      let markers = [];\n      function clearMarkers() {\n        markers.forEach((marker) => {\n          marker.setMap(null);\n        });\n        markers = [];\n      }\n\n      const centerMarker = new $window.google.maps.Marker({\n        position: { lat: $scope.center.latitude, lng: $scope.center.longitude },\n        map: map,\n        icon: 'images/grayMarker.png',\n        animation: $window.google.maps.Animation.BOUNCE\n      });\n\n      markers.push(centerMarker);\n\n      $scope.$watchGroup(['center.latitude', 'center.longitude'], () => {\n        const pos = { lat: $scope.center.latitude, lng: $scope.center.longitude };\n        centerMarker.setPosition(pos);\n      });\n\n      // directionsDisplay.setMap(map);\n\n      // function calcRoute(origin, destination) {\n      //   var center.latitude,center.longitude = origin;\n      //   var store.latitude,store.longitude = destination;\n      //   var request = {\n      //     origin: start,\n      //     destination: end,\n      //     travelMode: 'DRIVING'\n      //   };\n      //   directionsService.route(request, function(result, status) {\n      //     if (status === 'OK') {\n      //       directionsDisplay.setDirections(result);\n      //     }\n      //   });\n      // }\n\n      // function computeDistanceBetween(origin) {\n\n      // const origin=center.latitude,center.longitude|store.latitude,store.longitude\n\n\n\n\n\n\n      // }\n      // origins=41.43206,-81.38992|-33.86748,151.20699\n      // computeDistanceBetween(from:LatLng, to:LatLng, radius?:number)\n\n\n      $scope.$watch('marker', () => {\n        if ($scope.marker) {\n          const pos = { lat: $scope.marker.latitude, lng: $scope.marker.longitude };\n          // clearMarkers();\n          const storeMarker = new $window.google.maps.Marker({\n            position: pos,\n            map: map,\n            animation: $window.google.maps.Animation.DROP\n          });\n\n          map.setCenter(pos);\n\n          markers.push(storeMarker);\n          // const bounds = new $window.google.maps.LatLngBounds();\n          // for (var i = 0; i < markers.length; i++) {\n          //   bounds.extend(markers[i].getPosition());\n          // }\n          // map.fitBounds(bounds);\n        }\n      }, true);\n\n      $scope.$watch('markers', () => {\n        if ($scope.markers) {\n          clearMarkers();\n          $scope.markers.forEach((store) => {\n           // Create a marker for each store\n            const marker = new $window.google.maps.Marker({\n              position: { lat: store.latitude, lng: store.longitude },\n              map: map,\n              animation: $window.google.maps.Animation.DROP\n            });\n\n            markers.push(marker);\n          });\n        }\n      }, true);\n    }\n  };\n}\n","angular.module('PopShopRzProject')\n  .directive('googlePlace', googlePlace);\n\ngooglePlace.$inject = ['$window'];\n\nfunction googlePlace($window) {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    scope: {\n      place: '='\n    },\n    link: function($scope, element, attrs, model) {\n      const options = {\n        types: [],\n        componentRestrictions: { country: 'GB' }\n      };\n\n      const autocomplete = new $window.google.maps.places.Autocomplete(element[0], options);\n\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        const latLng = place.geometry.location.toJSON();\n\n        console.log(place);\n\n        $scope.place.lat = latLng.lat;\n        $scope.place.lng = latLng.lng;\n        $scope.place.google_place_id = place.place_id;\n        $scope.place.address = place.formatted_address;\n        $scope.place.phone_number = place.formatted_phone_number;\n        $scope.place.icon = place.icon;\n        $scope.place.name = place.name;\n        $scope.place.rating = place.rating;\n        $scope.place.website = place.website;\n\n        model.$setViewValue(element.val());\n      });\n    }\n  };\n}\n","angular.module('PopShopRzProject')\n  .service('locationService', locationService);\n\nlocationService.$inject = ['$window'];\nfunction locationService($window) {\n  const locationService = this;\n  locationService.location = { latitude: 51.51, longitude: -0.08 };\n\n  $window.navigator.geolocation.getCurrentPosition((pos) => {\n    locationService.location.latitude = pos.coords.latitude;\n    locationService.location.longitude = pos.coords.longitude;\n  });\n\n  return locationService;\n}\n","angular.module('PopShopRzProject')\n  .controller('MainController', MainController)\n  ;\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'User', '$window'];\nfunction MainController($auth, $state, $rootScope, User, $window) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('home');\n    });\n  }\n\n  const protectedStates = ['usersEdit', 'usersNew'];\n\n  function secureState(e, toState) {\n    main.message = null;\n\n    if($auth.isAuthenticated()) {\n      main.currentUser = User.get({ id: $auth.getPayload().id });\n      console.log('main.currentUser');\n    }\n\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  main.selectedList = [];\n  // user selected prod list\n  function addToSelectedProducts(product) {\n    main.selectedList.push(product);\n    console.log('Basket: ', main.selectedList);\n  }\n  main.addToSelectedProducts = addToSelectedProducts;\n\n}\n","angular.module('PopShopRzProject')\n  .factory('Place', Place);\n\nPlace.$inject = ['$resource', 'API_URL'];\nfunction Place($resource, API_URL) {\n  return new $resource(`${API_URL}/places/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('PopShopRzProject')\n  .factory('Product', Product);\n\nProduct.$inject = ['$resource', 'API_URL'];\nfunction Product($resource, API_URL) {\n  return new $resource(`${API_URL}/products/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('PopShopRzProject')\n  .controller('ProductsIndexController', ProductsIndexController)\n  .controller('ProductsOfferedController', ProductsOfferedController)\n  .controller('ProductsNewController', ProductsNewController)\n  .controller('ProductsShowController', ProductsShowController)\n  .controller('ProductsEditController', ProductsEditController);\n  // .controller('ProductsPickedIndexController', ProductsPickedIndexController);\n\nProductsIndexController.$inject = ['Product', '$auth'];\nfunction ProductsIndexController(Product, $auth) {\n  const productsIndex = this;\n\n  productsIndex.all = Product.query({ user_id: $auth.getPayload().id });\n\n  function onOffer(product) {\n    product.is_available = true;\n    product.$update();\n  }\n\n  productsIndex.onOffer = onOffer;\n}\n\nProductsOfferedController.$inject = ['Product', '$auth'];\nfunction ProductsOfferedController(Product, $auth) {\n  const productsOffered = this;\n\n  productsOffered.all = Product.query({ is_available: true, user_id: $auth.getPayload().id });\n\n  function offOffer(product, $index) {\n    product.is_available = false;\n    product.$update();\n\n    console.log($index);\n\n    productsOffered.all.splice($index, 1);\n  }\n\n  productsOffered.offOffer = offOffer;\n}\n\nProductsNewController.$inject = ['Product', '$state'];\nfunction ProductsNewController(Product, $state) {\n  const productsNew = this;\n\n  productsNew.product = {};\n\n  function create() {\n    console.log('creating with: ', productsNew.product);\n\n    Product.save(productsNew.product, () => {\n      $state.go('productsIndex');\n    });\n  }\n\n  productsNew.create = create;\n}\n\nProductsShowController.$inject = ['Product', '$state', '$auth'];\nfunction ProductsShowController(Product, $state, $auth) {\n  const productsShow = this;\n\n  productsShow.product = Product.get($state.params);\n\n  function deleteProduct() {\n    productsShow.product.$remove(() => {\n      $state.go('productsIndex');\n    });\n  }\n\n  productsShow.delete = deleteProduct;\n  productsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nProductsEditController.$inject = ['Product', '$state'];\nfunction ProductsEditController(Product, $state) {\n  const productsEdit = this;\n\n  productsEdit.product = Product.get($state.params);\n  productsEdit.product.$promise.then(product => {\n    product.end_time = new Date(product.end_time);\n  });\n\n  function update() {\n    productsEdit.product.$update(() => {\n      $state.go('productsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n\n// ProductsPickedIndexController.$inject = ['Product', '$auth', 'User'];\n// function ProductsPickedIndexController(Product, $auth, User) {\n//   const productsPickedIndex = this;\n//   productsPickedIndex.productPicks = [];\n//   // console.log($auth.getPayload());\n//   User.get({id: $auth.getPayload()._id}, (user) => {\n//     productsPickedIndex.user = user;\n//   });\n// }\n","angular\n  .module('PopShopRzProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html',\n      controller: 'MainController as home'\n    })\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('productsOffered', {\n      url: '/products/offered',\n      templateUrl: '/templates/productsOffered.html',\n      controller: 'ProductsOfferedController as productsOffered'\n    })\n    .state('userOffers', {\n      url: '/offers',\n      templateUrl: '/templates/userOffers.html',\n      controller: 'UserOffersController as userOffers'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('productsIndex', {\n      url: '/products',\n      templateUrl: '/templates/productsIndex.html',\n      controller: 'ProductsIndexController as productsIndex'\n    })\n    .state('productsNew', {\n      url: '/products/new',\n      templateUrl: '/templates/productsNew.html',\n      controller: 'ProductsNewController as productsNew'\n    })\n    .state('productsShow', {\n      url: '/products/:id',\n      templateUrl: '/templates/productsShow.html',\n      controller: 'ProductsShowController as productsShow'\n    })\n    .state('productsEdit', {\n      url: '/products/:id/edit',\n      templateUrl: '/templates/productsEdit.html',\n      controller: 'ProductsEditController as productsEdit'\n    })\n    .state('tagsIndex', {\n      url: '/tags',\n      templateUrl: '/templates/tagsIndex.html',\n      controller: 'TagsIndexController as tagsIndex'\n    })\n    .state('tagsShow', {\n      url: '/tags/:id',\n      templateUrl: '/templates/tagsShow.html',\n      controller: 'TagsShowController as tagsShow'\n    })\n    .state('tagsEdit', {\n      url: '/tags/:id/edit',\n      templateUrl: '/templates/tagsEdit.html',\n      controller: 'TagsEditController as tagsEdit'\n    });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('PopShopRzProject')\n  .factory('Tag', Tag);\n\nTag.$inject = ['$resource', 'API_URL'];\nfunction Tag($resource, API_URL) {\n  return new $resource(`${API_URL}/tags/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('PopShopRzProject')\n  .controller('TagsIndexController', TagsIndexController)\n  .controller('TagsNewController', TagsNewController)\n  .controller('TagsShowController', TagsShowController)\n  .controller('TagsEditController', TagsEditController);\n\nTagsIndexController.$inject = ['Tag'];\nfunction TagsIndexController(Tag) {\n  const tagsIndex = this;\n\n  tagsIndex.all = Tag.query();\n}\n\nTagsNewController.$inject = ['Tag', '$state'];\nfunction TagsNewController(Tag, $state) {\n  const tagsNew = this;\n\n  tagsNew.tag = {};\n\n  function create() {\n    Tag.save(tagsNew.tag, () => {\n      $state.go('tagsIndex');\n    });\n  }\n\n  tagsNew.create = create;\n}\n\nTagsShowController.$inject = ['Tag', '$state', '$auth'];\nfunction TagsShowController(Tag, $state, $auth) {\n  const tagsShow = this;\n\n  tagsShow.tag = Tag.get($state.params);\n\n  function deleteTag() {\n    tagsShow.tag.$remove(() => {\n      $state.go('tagsIndex');\n    });\n  }\n\n  tagsShow.delete = deleteTag;\n  tagsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nTagsEditController.$inject = ['Tag', '$state'];\nfunction TagsEditController(Tag, $state) {\n  const tagsEdit = this;\n\n  tagsEdit.tag = Tag.get($state.params);\n\n  function update() {\n    tagsEdit.tag.$update(() => {\n      $state.go('tagsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('PopShopRzProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('PopShopRzProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersNewController', UsersNewController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController)\n  .controller('UserOffersController', UserOffersController);\n\nUsersIndexController.$inject = ['$auth', 'User', '$window', '$scope'];\nfunction UsersIndexController($auth, User, $window, $scope) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query({ is_store: true });\n\n  usersIndex.location = { latitude: 51.51, longitude: -0.08 };\n\n  $window.navigator.geolocation.getCurrentPosition((pos) => {\n    usersIndex.location.latitude = pos.coords.latitude;\n    usersIndex.location.longitude = pos.coords.longitude;\n\n    $scope.$apply();\n  });\n}\n\nUsersNewController.$inject = ['User', '$state'];\nfunction UsersNewController(User, $state) {\n  const usersNew = this;\n\n  usersNew.user = {};\n\n  function create() {\n    User.save(usersNew.user, () => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersNew.create = create;\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth', '$scope', '$window', '$http'];\n// function UsersShowController(User, $state, $auth, $scope, $window, $http) {\nfunction UsersShowController(User, $state, $auth, $scope, $window, $http) {\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.location = { latitude: 51.51, longitude: -0.08 };\n\n  $window.navigator.geolocation.getCurrentPosition((pos) => {\n    usersShow.location.latitude = pos.coords.latitude;\n    usersShow.location.longitude = pos.coords.longitude;\n\n    $scope.$apply();\n  });\n\n\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n  function update() {\n    console.log(usersEdit.user);\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n\nUserOffersController.$inject = ['Product'];\nfunction UserOffersController(Product) {\n  const userOffers = this;\n\n  userOffers.all = Product.query({ is_available: true });\n}\n"]}