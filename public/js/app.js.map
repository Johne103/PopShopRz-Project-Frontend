{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/router.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","register","this","user","is_store","submit","signup","then","go","LoginController","login","credentials","successResponse","currentUser","data","console","log","id","MainController","$rootScope","User","$window","main","isLoggedIn","isAuthenticated","message","protectedStates","$on","e","toState","get","getPayload","includes","name","preventDefault","logout","selectedList","addToSelectedProducts","product","push","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","$resource","update","method","UsersIndexController","$scope","usersIndex","all","query","location","latitude","longitude","navigator","geolocation","getCurrentPosition","pos","coords","$apply","UsersNewController","usersNew","create","save","UsersShowController","usersShow","params","delete","$remove","UsersEditController","usersEdit","$update","UserOffersController","Product","is_available","angular","module","constant","config","$inject","factory"],"mappings":"aAiBA,SAASA,KAAKC,EAAeC,GAC3BD,EAAcE,SAAcD,EAA5B,SACAD,EAAcG,UAAeF,EAA7B,YAEAD,EAAcI,YAAc,GChB9B,SAASC,mBAAmBC,EAAOC,GACjC,IAAMC,EAAWC,KAEjBD,EAASE,MACPC,UAAU,GAUZH,EAASI,OAPT,WACEN,EAAMO,OAAOL,EAASE,MACnBI,KAAK,WACJP,EAAOQ,GAAG,YAQlB,SAASC,gBAAgBV,EAAOC,GAC9B,IAAMU,EAAQR,KAEdQ,EAAMC,eAeND,EAAML,OAbN,WACEN,EAAMW,MAAMA,EAAMC,aACfJ,KAAK,SAACK,GACLb,EAAMc,YAAcD,EAAgBE,KAAKX,KACzCY,QAAQC,IAAI,oCAAqCJ,GAC7Cb,EAAMc,YAAYT,SACpBJ,EAAOQ,GAAG,aAAeS,GAAIlB,EAAMc,YAAYI,KAE/CjB,EAAOQ,GAAG,iBC/BpB,SAASU,eAAenB,EAAOC,EAAQmB,EAAYC,EAAMC,GACvD,IAAMC,EAAOpB,KAEboB,EAAKC,WAAaxB,EAAMyB,gBACxBF,EAAKG,QAAU,KASf,IAAMC,GAAmB,YAAa,YAgBtCP,EAAWQ,IAAI,oBAdf,SAAqBC,EAAGC,GACtBP,EAAKG,QAAU,KAEZ1B,EAAMyB,oBACPF,EAAKT,YAAcO,EAAKU,KAAMb,GAAIlB,EAAMgC,aAAad,OAGnDlB,EAAMyB,mBAAqBE,EAAgBM,SAASH,EAAQI,QAC9DL,EAAEM,iBACFlC,EAAOQ,GAAG,SACVc,EAAKG,QAAU,wCAMnBH,EAAKa,OAzBL,WACEpC,EAAMoC,SACL5B,KAAK,WACJP,EAAOQ,GAAG,WAwBdc,EAAKc,gBAMLd,EAAKe,sBAJL,SAA+BC,GAC7BhB,EAAKc,aAAaG,KAAKD,GACvBvB,QAAQC,IAAI,WAAYM,EAAKc,eCrCjC,SAASI,OAAOC,EAAgBC,GAC9BD,EACGE,MAAM,QACLC,IAAK,IACLC,YAAa,uBACbC,WAAY,2BAEbH,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAObH,MAAM,cACLC,IAAK,UACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,aACLC,IAAK,aACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,aACLC,IAAK,kBACLC,YAAa,4BACbC,WAAY,qCAsChBJ,EAAmBK,UAAU,UC/E/B,SAAS3B,KAAK4B,EAAWtD,GACvB,OAAO,IAAIsD,EAAatD,EAAjB,cAAwCuB,GAAI,QACjDgC,QAAUC,OAAQ,SCEtB,SAASC,qBAAqBpD,EAAOqB,EAAMC,EAAS+B,GAClD,IAAMC,EAAanD,KAEnBmD,EAAWC,IAAMlC,EAAKmC,OAAQnD,UAAU,IAExCiD,EAAWG,UAAaC,SAAU,MAAOC,WAAY,KAErDrC,EAAQsC,UAAUC,YAAYC,mBAAmB,SAACC,GAChDT,EAAWG,SAASC,SAAWK,EAAIC,OAAON,SAC1CJ,EAAWG,SAASE,UAAYI,EAAIC,OAAOL,UAE3CN,EAAOY,WAKX,SAASC,mBAAmB7C,EAAMpB,GAChC,IAAMkE,EAAWhE,KAEjBgE,EAAS/D,QAQT+D,EAASC,OANT,WACE/C,EAAKgD,KAAKF,EAAS/D,KAAM,WACvBH,EAAOQ,GAAG,iBAShB,SAAS6D,oBAAoBjD,EAAMpB,EAAQD,EAAOqD,EAAQ/B,GACxD,IAAMiD,EAAYpE,KAElBoE,EAAUnE,KAAOiB,EAAKU,IAAI9B,EAAOuE,QAQjCD,EAAUd,UAAaC,SAAU,MAAOC,WAAY,KAEpDrC,EAAQsC,UAAUC,YAAYC,mBAAmB,SAACC,GAChDQ,EAAUd,SAASC,SAAWK,EAAIC,OAAON,SACzCa,EAAUd,SAASE,UAAYI,EAAIC,OAAOL,UAE1CN,EAAOY,WAITM,EAAUE,OAhBV,WACEF,EAAUnE,KAAKsE,QAAQ,WACrBzE,EAAOQ,GAAG,iBAed8D,EAAU/C,WAAaxB,EAAMyB,gBAI/B,SAASkD,oBAAoBtD,EAAMpB,GACjC,IAAM2E,EAAYzE,KAElByE,EAAUxE,KAAOiB,EAAKU,IAAI9B,EAAOuE,QAQjCrE,KAAK+C,OAPL,WACElC,QAAQC,IAAI2D,EAAUxE,MACtBwE,EAAUxE,KAAKyE,QAAQ,WACrB5E,EAAOQ,GAAG,YAAaR,EAAOuE,WASpC,SAASM,qBAAqBC,GACT5E,KAERoD,IAAMwB,EAAQvB,OAAQwB,cAAc,ILzEjDC,QAAQC,OAAO,oBAAqB,aAAc,YAAa,eAC5DC,SAAS,UAAW,6BACpBC,OAAO3F,MAEVA,KAAK4F,SAAW,gBAAiB,WChBjCJ,QAAQC,OAAO,oBACZnC,WAAW,qBAAsBhD,oBACjCgD,WAAW,kBAAmBrC,iBAEjCX,mBAAmBsF,SAAW,QAAS,UAkBvC3E,gBAAgB2E,SAAW,QAAS,UCtBpCJ,QAAQC,OAAO,oBACZnC,WAAW,iBAAkB5B,gBAGhCA,eAAekE,SAAW,QAAS,SAAU,aAAc,OAAQ,WCJnEJ,QACGC,OAAO,oBACPE,OAAO3C,QAEVA,OAAO4C,SAAW,iBAAkB,sBCJpCJ,QAAQC,OAAO,oBACZI,QAAQ,OAAQjE,MAEnBA,KAAKgE,SAAW,YAAa,WCH7BJ,QAAQC,OAAO,oBACZnC,WAAW,uBAAwBK,sBACnCL,WAAW,qBAAsBmB,oBACjCnB,WAAW,sBAAuBuB,qBAClCvB,WAAW,sBAAuB4B,qBAClC5B,WAAW,uBAAwB+B,sBAEtC1B,qBAAqBiC,SAAW,QAAS,OAAQ,UAAW,UAgB5DnB,mBAAmBmB,SAAW,OAAQ,UAetCf,oBAAoBe,SAAW,OAAQ,SAAU,QAAS,SAAU,UAAW,SA2B/EV,oBAAoBU,SAAW,OAAQ,UAgBvCP,qBAAqBO,SAAW","file":"app.js","sourcesContent":["// angular.module('PopShopRzProject', ['ngResource', 'ui.router', 'satellizer' ])\n//   .constant('API_URL', window.location.hostname === 'localhost' ? 'http://localhost:3000/api' : '//sobuylocal-api.herokuapp.com/api')\n//   .config(Auth);\n//\n// Auth.$inject = ['$authProvider', 'API_URL'];\n// function Auth($authProvider, API_URL) {\n//   $authProvider.loginUrl = `${API_URL}/login`;\n//   $authProvider.signupUrl = `${API_URL}/register`;\n//\n//   $authProvider.tokenPrefix = '';\n// }\n\nangular.module('PopShopRzProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('PopShopRzProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {\n    is_store: false\n  };\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then((successResponse) => {\n        $auth.currentUser = successResponse.data.user;\n        console.log('LoginController: successResponse:', successResponse);\n        if ($auth.currentUser.is_store){\n          $state.go('usersShow', { id: $auth.currentUser.id });\n        } else {\n          $state.go('usersIndex');\n        }\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('PopShopRzProject')\n  .controller('MainController', MainController)\n  ;\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'User', '$window'];\nfunction MainController($auth, $state, $rootScope, User, $window) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('home');\n    });\n  }\n\n  const protectedStates = ['usersEdit', 'usersNew'];\n\n  function secureState(e, toState) {\n    main.message = null;\n\n    if($auth.isAuthenticated()) {\n      main.currentUser = User.get({ id: $auth.getPayload().id });\n    }\n\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  main.selectedList = [];\n  // user selected prod list\n  function addToSelectedProducts(product) {\n    main.selectedList.push(product);\n    console.log('Basket: ', main.selectedList);\n  }\n  main.addToSelectedProducts = addToSelectedProducts;\n\n}\n","angular\n  .module('PopShopRzProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html',\n      controller: 'MainController as home'\n    })\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    // .state('productsOffered', {\n    //   url: '/products/offered',\n    //   templateUrl: '/templates/productsOffered.html',\n    //   controller: 'ProductsOfferedController as productsOffered'\n    // })\n    .state('userOffers', {\n      url: '/offers',\n      templateUrl: '/templates/userOffers.html',\n      controller: 'UserOffersController as userOffers'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    });\n    // .state('productsIndex', {\n    //   url: '/products',\n    //   templateUrl: '/templates/productsIndex.html',\n    //   controller: 'ProductsIndexController as productsIndex'\n    // })\n    // .state('productsNew', {\n    //   url: '/products/new',\n    //   templateUrl: '/templates/productsNew.html',\n    //   controller: 'ProductsNewController as productsNew'\n    // })\n    // .state('productsShow', {\n    //   url: '/products/:id',\n    //   templateUrl: '/templates/productsShow.html',\n    //   controller: 'ProductsShowController as productsShow'\n    // })\n    // .state('productsEdit', {\n    //   url: '/products/:id/edit',\n    //   templateUrl: '/templates/productsEdit.html',\n    //   controller: 'ProductsEditController as productsEdit'\n    // })\n    // .state('tagsIndex', {\n    //   url: '/tags',\n    //   templateUrl: '/templates/tagsIndex.html',\n    //   controller: 'TagsIndexController as tagsIndex'\n    // })\n    // .state('tagsShow', {\n    //   url: '/tags/:id',\n    //   templateUrl: '/templates/tagsShow.html',\n    //   controller: 'TagsShowController as tagsShow'\n    // })\n    // .state('tagsEdit', {\n    //   url: '/tags/:id/edit',\n    //   templateUrl: '/templates/tagsEdit.html',\n    //   controller: 'TagsEditController as tagsEdit'\n    // });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('PopShopRzProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('PopShopRzProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersNewController', UsersNewController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController)\n  .controller('UserOffersController', UserOffersController);\n\nUsersIndexController.$inject = ['$auth', 'User', '$window', '$scope'];\nfunction UsersIndexController($auth, User, $window, $scope) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query({ is_store: true });\n\n  usersIndex.location = { latitude: 51.51, longitude: -0.08 };\n\n  $window.navigator.geolocation.getCurrentPosition((pos) => {\n    usersIndex.location.latitude = pos.coords.latitude;\n    usersIndex.location.longitude = pos.coords.longitude;\n\n    $scope.$apply();\n  });\n}\n\nUsersNewController.$inject = ['User', '$state'];\nfunction UsersNewController(User, $state) {\n  const usersNew = this;\n\n  usersNew.user = {};\n\n  function create() {\n    User.save(usersNew.user, () => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersNew.create = create;\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth', '$scope', '$window', '$http'];\n// function UsersShowController(User, $state, $auth, $scope, $window, $http) {\nfunction UsersShowController(User, $state, $auth, $scope, $window) {\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.location = { latitude: 51.51, longitude: -0.08 };\n\n  $window.navigator.geolocation.getCurrentPosition((pos) => {\n    usersShow.location.latitude = pos.coords.latitude;\n    usersShow.location.longitude = pos.coords.longitude;\n\n    $scope.$apply();\n  });\n\n\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n  function update() {\n    console.log(usersEdit.user);\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n\nUserOffersController.$inject = ['Product'];\nfunction UserOffersController(Product) {\n  const userOffers = this;\n\n  userOffers.all = Product.query({ is_available: true });\n}\n"]}